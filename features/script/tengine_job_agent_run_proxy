#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

#whichコマンドを用いて本物のtengine_job_agent_runコマンドのパスを取得します
paths = IO.popen("which -a tengine_job_agent_run")
realpath = nil
while path = paths.gets do
  realpath = path
end
realpath.chomp!

ssh_kill_before, ssh_kill_after = nil
before_execute_sleep_time, after_exexute_sleep_time = 0, 0

#本物のtengine_job_agent_runを実行する前にsshを切断するかのフラグ用環境変数
ssh_kill_before = ENV["SSH_KILL_BEFORE"] == "true" if ENV["SSH_KILL_BEFORE"]

#本物のtengine_job_agent_runを実行した後にsshを切断するかのフラグ用環境変数
ssh_kill_after = ENV["SSH_KILL_AFTER"] == "true" if ENV["SSH_KILL_AFTER"]

#本物のtengine_job_agent_runを実行する前に何秒間sleepするか設定用するための環境変数
before_execute_sleep_time = ENV["BEFORE_EXECUTE_SLEEP_TIME"].to_i if ENV["BEFORE_EXECUTE_SLEEP_TIME"]

#本物のtengine_job_agent_runを実行する後に何秒間sleepするか設定用するための環境変数
after_exexute_sleep_time = ENV["AFTER_EXECUTE_SLEEP_TIME"].to_i if ENV["AFTER_EXECUTE_SLEEP_TIME"]

#本物のtengine_job_agent_runを実行する前にsleep
sleep  before_execute_sleep_time

#本物のtengine_job_agent_runを実行します
pid =  `#{realpath}  #{ARGV.join(" ")}`
exit_code = $?.exitstatus
pid.chomp!

#本物のtengine_job_agent_runを実行した後にsleep
sleep after_exexute_sleep_time

#スクリプトのpidをtenginedに伝えます
STDOUT.puts pid

#本物のtengine_job_agent_runを実行す
exit(exit_code)
