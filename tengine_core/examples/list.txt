01 最もシンプルなイベントハンドラ
02 イベントが発生したら新たなイベントを発火する
03 一つのイベントに対して処理Aと処理Bを実行する

08 イベントAとイベントBが発生したら処理を実行する

10 特定のサーバからのイベントが発生した場合のみ処理を実行する

20 :properties指定で発火する
20 :key指定で発火する
20 :source_name指定で発火する
20 :level指定で発火する
20 :level_key指定で発火する

50 ack_policy(:at_first, ...) の例
51 ack_policy(:at_first_submit, ...) の例
52 ack_policy(:after_all_handler_submit, ...) でACKを返す例
53 ack_policy(:after_all_handler_submit, ...) でACKを返さない例

60 eventメソッドを使って受け取ったイベントを取得する
61 eventメソッドをハンドラ外で使用して例外が発生する例
62 ドライバ内では sessionメソッドで取得できるセッションに対してupdateメソッドを使ってドライバのセッションに情報を格納できる
63 sessionメソッドをドライバ外で使用して例外が発生する例
64 driver62と違って、複数のプロセスが同時に数を数えても正しく+1していきます

70 アクティベーション時にイベントドライバを有効な状態にする例
71 アクティベーション時にイベントドライバを無効な状態にする例
72 アクティベーション時にEventMachineの初期化を行う例

80 イベントハンドリング中にIOErrorが発生するハンドラ
81 イベントハンドリング中にRuntimeErrorが発生するハンドラ
