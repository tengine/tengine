ユースケース名:
  アプリケーション運用者がイベントハンドラ定義のデプロイを行う

背景:
  アプリケーション開発者がアプリケーションを開発し、アプリケーション運用者がリリース計画をもとにリリースを行う
  このユースケースはアプリケーション運用者がリリース計画を元にリリース作業を行う部分を取り扱う


概要:
  アプリケーション運用者がイベントハンドラ定義のデプロイを行い、イベントハンドラ定義を本番環境やステージング環境に反映する  


事前条件:
  デプロイに必要な情報が揃っていること
   * リリースするアプリケーションのリポジトリの場所やブランチ
   * デプロイ対象サーバの認証情報 など
  リリースするアプリケーションのリポジトリの場所がわかっていること
  反映先のすべてのサーバにTengineコアのインストールが完了していること
  デプロイ作業を行う端末にCapistranoがインストールされていること


成功時保証:
  なし


最低保証:
  なし


登場するコンポーネント:


参照するドキュメント:
  運用者向けTengineマニュアル


登場するパッケージ:
  Tengineコア


基本コース:

1. アプリケーション運用者はデプロイに必要なスクリプトファイル(deploy.rb)を作成する[代替コースA,E,F]＜戻り点:スクリプトファイル作成＞

2. アプリケーション運用者は本番環境に対してデプロイのセットアップを行う(deploy:setup)[代替コースB]＜戻り点:セットアップ実施＞
3. アプリケーション運用者はデプロイのセットアップが成功したことを確認する

4. アプリケーション運用者は本番環境に対してデプロイの更新を行う(deploy:update/deploy:bundle)[代替コースC]＜戻り点:デプロイの更新実施＞
5. アプリケーション運用者はデプロイの更新が成功したことを確認する

6. アプリケーション運用者は本番環境に対してTengineサーバの起動を行う(deplpy:start)[代替コースD]＜戻り点:Tengine起動実施＞
7. アプリケーション運用者はTengineサーバの起動が成功したことを確認する

8. ユースケースは終了する


代替コースA: [正常系] ステージング環境に対してデプロイを行う場合

1. アプリケーション運用者はステージング環境に対してデプロイのセットアップを行う(deploy:setup)[代替コースB]＜戻り点:セットアップ実施＞
2. アプリケーション運用者はデプロイのセットアップが成功したことを確認する

3. アプリケーション運用者はステージング環境に対してデプロイの更新を行う(deploy:update/deploy:bundle)[代替コースC]＜戻り点:デプロイの更新実施＞
4. アプリケーション運用者はデプロイの更新が成功したことを確認する

5. アプリケーション運用者はステージング環境に対してTengineサーバの起動を行う(deplpy:start)[代替コースD]＜戻り点:Tengine起動実施＞
6. アプリケーション運用者はTengineサーバの起動が成功したことを確認する

7. ユースケースは終了する


代替コースB: [異常系] デプロイのセットアップが失敗した場合(deploy.rbが間違っている)
1. deploy.rbの内容を確認し、正しく修正する
2. ＜戻り点:セットアップ実施＞に遷移する


代替コースC: [異常系] デプロイの更新が失敗した場合(deploy.rbが間違っている)
1. deploy.rbの内容を確認し、正しく修正する
2. ＜戻り点:デプロイの更新実施＞に遷移する


代替コースD: [異常系] Tengineサーバの起動に失敗した場合(deploy.rbが間違っている)
1. deploy.rbの内容を確認し、正しく修正する
2. ＜戻り点:Tengine起動実施＞


代替コースE: [正常系] 複数のサーバにデプロイを行う場合
1. deploy.rbの内容を修正する
2. ＜戻り点:スクリプトファイル作成＞に遷移する

代替コースF: [正常系] 複数のプロセスを使用する設定を行う場合
1. deploy.rbの内容を修正する
2. ＜戻り点:スクリプトファイル作成＞に遷移する


# 本番とステージングがある
# 失敗した場合はロールバックされる
# 手動ロールバックについてどう扱うか？
# 複数サーバー/複数プロセスにデプロイするときはどう？
