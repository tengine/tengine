ユースケース名:
  アプリケーション開発者がジョブネット定義をデプロイしてみる

背景:
  アプリケーション開発者は、以下のいずれかのパターンで開発環境にジョブネット定義をデプロイすることができる。
  ・SCMサーバ(Git,SVN)を構築し、SCMサーバからデプロイする
  ・デプロイ先のサーバにジョブネット定義を転送し、デプロイする
  ・デプロイ対象のジョブネット定義をtarballにして転送し、デプロイする
  本ユースケースでは
  ・SCMサーバ(Git)を構築し、SCMサーバからデプロイする
  について記載する。

概要:
  アプリケーション開発者がDSLのデプロイを行い、DSLを開発環境に反映させる
  DSLはGitで管理されており、デプロイ時はGitのリポジトリURLを指定することにより、
  GitからDSLを取得し、Tengineにデプロイされる。
  デプロイは以下の3つの操作で構成されており、それぞれの役割は以下のとおり
   * デプロイのセットアップ  デプロイの準備を行う
   * DSLファイルの更新      DSLファイルの更新を行う
   * Tengineの起動         Tengineコアプロセスの起動を行う

事前条件:
  デプロイに必要な情報が揃っていること
   * アプリケーション名
   * デプロイ対象サーバの情報
     * デプロイ対象サーバーのアドレス
     * デプロイ対象サーバーのSSHポート番号
     * デプロイ対象サーバにSSHログインするときのユーザー名
     * デプロイ対象サーバにSSHログインするときのパスワード
     * デプロイパス
   * SCMサーバの情報
     * SCMの種類(Git)
     * リポジトリのURL
     * ブランチ名
  デプロイ先のすべてのサーバが起動していること
  デプロイ先のすべてのサーバに以下のパッケージのインストールが完了していること
   * Tengineコア
   * Tengineジョブ
  デプロイ作業を行う端末にCapistranoがインストールされていること

成功時保証:
  デプロイ対象のすべてのジョブがTengineにデプロイされていることを確認できること

最低保証:
  なし

登場する画面:
  テンプレートジョブ一覧画面

登場するコンポーネント:

登場するパッケージ:
  Tengineコア
  Tengineジョブ

登場するドキュメント:
  開発者向けTengineマニュアル

基本コース:
  1. アプリケーション開発者はデプロイに必要なスクリプトファイル(deploy.rb)を作成する

  2. アプリケーション開発者は開発環境に対してデプロイのセットアップを行う(cap production deploy:setup)＜戻り点:セットアップ実施＞
  3. アプリケーション開発者はデプロイのセットアップが成功したことを確認する[代替コースA]

  4. アプリケーション開発者は開発環境に対してDSLファイルの更新を行う(cap production deploy:update/cap production deploy:bundle)＜戻り点:デプロイの更新実施＞
  5. アプリケーション開発者はDSLファイルの更新が成功したことを確認する[代替コースB,C,D]

  6. アプリケーション開発者は開発環境に対してTengineの起動を行う(cap production deploy:start)＜戻り点:起動実施＞
  7. アプリケーション開発者はTengineの起動が成功したことを確認する

  8. アプリケーション開発者はTengineが正しく稼動していることをコマンド(cap production deploy:status)で確認する[代替コースE]

  9. アプリケーション開発者は「テンプレートジョブ一覧」画面を開く
 10. 「テンプレートジョブ一覧」画面は登録されているルートジョブネットのディレクトリとファイル構成を取得する[代替コースI]
    # ディレクトリとファイル構成についての詳細は https://cacoo.com/diagrams/rii6GnIvnzTmnCVc を参照
 11. 「テンプレートジョブ一覧」画面はカテゴリーツリーの情報を出力する[代替コースH]

 12. アプリケーション開発者はルートジョブネットの検索に必要な条件を入力して検索ボタンを押下する
    # 検索条件：(ジョブの)ID、ジョブネット識別子、表示名
 13. 「テンプレートジョブ一覧」画面は検索条件をもとにして登録されているルートジョブネットの情報を問い合わせる[代替コースI]
    # 情報: (ルートジョブネット) ID,ジョブネット識別子,表示名,参照ボタン,実行ボタン
    # 実行ボタンはルートジョブネットのステータスが[準備中],[開始中],[実行中]のときは表示されない
 14. 「テンプレートジョブ一覧」画面は登録されているルートジョブネットの情報を出力する[代替コースF,G]

 15. アプリケーション開発者は登録したルートジョブネットの情報が出力されていることを確認する

 16. ユースケースは終了する


代替コースA: [異常系] デプロイのセットアップが失敗した場合(deploy.rbのデプロイサーバーの情報が間違っている)
  1. アプリケーション開発者はdeploy.rbの内容を確認し、正しく修正する
  2. ＜戻り点:セットアップ実施＞に遷移する


代替コースB: [異常系] デプロイの更新が失敗した場合(deploy.rbのSCMサーバの情報が間違っている)
  1. アプリケーション開発者はdeploy.rbの内容を確認し、正しく修正する
  2. ＜戻り点:デプロイの更新実施＞に遷移する


代替コースC: [異常系] デプロイの更新が成功したが警告が出る場合
    # 警告が出るのは以下のDSL
    # ./features/usecases/job/dsl/1043_not_registered_instance_name.rb
    # ./features/usecases/job/dsl/1044_not_registered_credential_name.rb
    # 参照: https://docs.google.com/a/nautilus-technologies.com/spreadsheet/ccc?key=0Ao6jI3S84rGSdHB6QkpEMF9oaXNyQ0xObXktYWRlNlE&hl=en_US#gid=0
  1. アプリケーション開発者はDSLを確認する[代替コースC1]
  2. ＜戻り点:起動実施＞に遷移する


代替コースC1: DSLファイルが間違っていた場合
  1. アプリケーション開発者はDSLファイルの内容を修正する
  2. アプリケーション開発者はDSLファイルの更新をSCMサーバに反映させる
  3. ＜戻り点:デプロイの更新実施＞に遷移する


代替コースD: [異常系] デプロイの更新に失敗した場合(DSLファイルが間違っている)
  1. アプリケーション開発者はDSLファイルの内容を確認する[代替コースD2]
  2. アプリケーション開発者はDSLファイルの内容を修正する
  3. アプリケーション開発者はDSLファイルの更新をSCMサーバに反映させる
  4. ＜戻り点:デプロイの更新実施＞に遷移する


代替コースD2: [異常系] DSLファイルの修正を行わない場合
  1. アプリケーション開発者はDSLを変更せずにロールバックされていることの確認を行う
  2. ＜戻り点:起動実施＞に遷移する


代替コースE: [異常系] Tengineサーバが正しく稼動していない場合(startして時間が経過していない)
  1. 時間を置いて再度実行する
  2. ＜戻り点:Tengineの稼動確認＞に遷移する


代替コースF: 検索条件にヒットするルートジョブネットが多数あった場合
  1. アプリケーション開発者は<Nextボタンを押下する
  2. 「テンプレートジョブ一覧」画面は検索条件をもとにして登録されているルートジョブネットの情報を問い合わせる
    # 情報: (ルートジョブネット) ID,ジョブネット識別子,表示名,参照ボタン,実行ボタン
    # 実行ボタンはルートジョブネットのステータスが[準備中],[開始中],[実行中]のときは表示されない
  3. 「テンプレートジョブ一覧」画面は登録されているルートジョブネットの情報を出力する[代替コースF,G]
  4. アプリケーション開発者は登録したルートジョブネットの情報が出力されていることを確認する
  5. ユースケースは終了する


代替コースG: 検索結果の表示順を変更したい場合
  1. アプリケーション開発者はテンプレートジョブテーブルのヘッダを押下する
    # ヘッダ: ID,ジョブネット識別子,表示名
  2. 「テンプレートジョブ一覧」画面は登録されているルートジョブネットの情報を押下されたヘッダの条件で表示順を変更して出力する[代替コースF,G]
    # 一度押下されると昇順、二度押下されると降順になる
  3. アプリケーション開発者は登録したルートジョブネットの情報が出力されていることを確認する
  4. ユースケースは終了する


代替コースH: 目的のルートジョブネットがどのカテゴリツリーにあるかわかっている場合
  1. アプリケーション開発者は目的のルートジョブネットがあるカテゴリーツリーのフォルダを押下する
  2. 「テンプレートジョブ一覧」画面は押下されたフォルダに含まれているルートジョブネットの情報を問い合わせる
  3. 「テンプレートジョブ一覧」画面は押下されたフォルダに含まれているルートジョブネットの情報を出力する[代替コースF,G]
  4. アプリケーション開発者は登録したルートジョブネットの情報が出力されていることを確認する
  5. ユースケースは終了する


代替コースI: [異常系] ルートジョブネットの情報が取得できない場合
  1. 「テンプレートジョブ一覧」画面はエラーメッセージ(ルートジョブネットの情報が取得できません)を出力する
  2. ユースケースは終了する


注記:
他のパターンのデプロイについては後日作成予定
