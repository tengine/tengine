ユースケース名:
  アプリケーション開発者がTengineコアのイベントハンドラ定義を試してみる

背景:
  アプリケーション開発者は、Tengineの導入を検討するために、イベントハンドラ定義の開発やTengineの運用の容易性や運用の信頼性を評価する
  また、Tengineの利用を容易にする為には、以下にあげた項目が重要である
    * Tengineのインストールからセットアップ、起動までの作業手順が簡単なこと
    * イベントハンドラ定義を作成する為の資料が揃っており、"イベントハンドラ定義の作成"から"イベントハンドラの実行"までの作業手順が簡単なこと
  なお、Tengineの利用を容易にする背景の一つとして、最首さんによるTengineのプレゼンテーションを現実のユースケースとしても考慮する

概要:
  アプリケーション開発者がTengineコアのイベントハンドラ定義を試しに作成しイベント発火からイベントハンドラの実行までを確認する

事前条件:
  Tengineを動かすためのパッケージとTengineコアとTengineコンソールのインストールおよびセットアップが完了している
  Tengineコアのプロセスが停止している
  Tengineコンソールのプロセスが停止している
  登場するイベントハンドラ定義が全てGetting Startedに記載されている

成功時保証:
  それぞれのイベントハンドラが実行されたことが確認できている

最低保証:
  開発環境でTengineコアが停止している
  開発環境でTengineコンソールが停止している

登場するコンポーネント:
  イベントハンドラ定義ストア
  イベントハンドラストア
  イベントドライバ管理画面
  イベント発火画面
  イベント通知画面

参照するドキュメント:
  Getting Started
  開発者向けTengineマニュアル

登場するイベントハンドラ定義:
  uc01_execute_processing_for_event.rb
  uc02_fire_another_event.rb
  uc03_2handlers_for_1event.rb
  uc08_if_both_a_and_b_occurs.rb
  uc10_if_the_event_occurs_at_the_server.rb ("at"が将来対応)
  uc11_if_the_event_occurs_in_the_servers.rb ("in"が将来対応)
  uc14_if_the_event_occurs_at_same_servers.rb ("at"が将来対応)
  uc30_complex_case01.rb ("at"が将来対応)
  uc30_complex_case02.rb ("at"が将来対応)
  uc31_complex_case01.rb ("at"が将来対応)
  uc40_generated_handler.rb (テンプレート生成機能が将来対応)

基本コース:
1. アプリケーション開発者は開発環境でTengineコンソールをファアグラウンドで起動する

2. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc01_execute_processing_for_event.rb)
3. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
4. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
5. アプリケーション開発者はイベント発火画面でイベントを発火する
6. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
7. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
8. アプリケーション開発者は開発環境でTengineコアを Ctl+c で停止する

9. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc02_fire_another_event.rb)
10. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
11. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
12. アプリケーション開発者はイベント発火画面でイベントを発火する
13. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
14. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
15. アプリケーション開発者は開発環境でTengineコアを Ctl+c で停止する

16. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc03_2handlers_for_1event.rb)
17. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
18. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
19. アプリケーション開発者はイベント発火画面でイベントを発火する
20. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
21. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
22. アプリケーション開発者は開発環境でTengineコアを Ctl+c で停止する

23. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc08_if_both_a_and_b_occurs.rb)
24. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
25. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
26. アプリケーション開発者はイベント発火画面でイベントを発火する
27. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
28. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
29. アプリケーション開発者は開発環境でTengineコアを Ctl+c で停止する

30. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc10_if_the_event_occurs_at_the_server.rb)
31. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
32. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
33. アプリケーション開発者はイベント発火画面でイベントを発火する
34. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
35. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
36. アプリケーション開発者は開発環境でTengineコアを Ctl+c で停止する

37. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc11_if_the_event_occurs_in_the_servers.rb)
38. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動するイベントハンドラ定義を作成する
39. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
40. アプリケーション開発者はイベント発火画面でイベントを発火する
41. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
42. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
43. アプリケーション開発者は開発環境でTengineコアを Ctl+c で停止する

44. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc14_if_the_event_occurs_at_same_servers.rb)
45. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
46. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
47. アプリケーション開発者はイベント発火画面でイベントを発火する
48. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
49. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
50. アプリケーション開発者は開発環境でTengineコアを Ctl+c で停止する

51. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc30_complex_case01.rb)
52. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
53. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
54. アプリケーション開発者はイベント発火画面でイベントを発火する
55. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
56. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
57. アプリケーション開発者は開発環境でTengineコアを Ctl+c で停止する

58. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc30_complex_case02.rb)
59. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
60. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
61. アプリケーション開発者はイベント発火画面でイベントを発火する
62. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
63. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
64. アプリケーション開発者は開発環境でTengineコアを Ctl+c で停止する

65. アプリケーション開発者はGetting Startedを参考にイベントハンドラ定義を作成する (作成したイベントハンドラ定義：uc31_complex_case01.rb)
66. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
67. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
68. アプリケーション開発者はイベント発火画面でイベントを発火する
69. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
70. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
71. アプリケーション開発者は開発環境でTengineコアをコマンドで Ctl+c で停止する

(ファイル指定)
72. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する[代替コースA,B,C,D,F,H]
73. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する<戻り点: ファイル指定のTengineコア停止>
74. アプリケーション開発者は開発環境でTengineコアをコマンドで Ctl+c で停止する<戻り点: ファイル指定の終了>

(ディレクトリ指定)
75. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する[代替コースE,G,I,J]
76. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する<戻り点: ディレクトリ指定のTengineコア停止>
77. アプリケーション開発者は開発環境でTengineコアをコマンドで Ctl+c で停止する<戻り点: ディレクトリ指定の終了>

(実行時にエラーになる)
78. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する
79. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
80. アプリケーション開発者はイベント発火画面でイベントを発火する
81. アプリケーション開発者はイベント通知画面でイベントを発火したことを確認する
82. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行され、エラーとなったことを確認する
83. アプリケーション開発者は開発環境でTengineコアをコマンドで Ctl+c で停止する

84. アプリケーション開発者は開発環境でTengineコンソールを Ctl+c で停止する

代替コースA:イベントドライバが1つもないイベントドライバ定義を指定した場合
1. アプリケーション開発者は警告メッセージが表示されていることを確認する
2. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ何も登録されていないことを確認する
3. <戻り点: ファイル指定のTengineコア停止>に遷移する

代替コースB:イベントハンドラが1つもないイベントドライバ定義を指定した場合
1. アプリケーション開発者は警告メッセージが表示されていることを確認する
2. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ何も登録されていないことを確認する
3. <戻り点: ファイル指定のTengineコア停止>に遷移する

代替コースC:シンタックスエラーがあるイベントドライバ定義を指定した場合
1. アプリケーション開発者はエラーメッセージが表示されていることを確認する
2. <戻り点: ファイル指定の終了>に遷移する

代替コースD:存在しないイベントハンドラ定義ファイルを指定した場合
1. アプリケーション開発者はエラーメッセージが表示されていることを確認する
2. <戻り点: ファイル指定の終了>に遷移する

代替コースE:存在しないディレクトリを指定した場合
1. アプリケーション開発者はエラーメッセージが表示されていることを確認する
2. <戻り点: ディレクトリ指定の終了>に遷移する

代替コースF:中にファイル存在しないディレクトリを指定した場合
1. アプリケーション開発者はエラーメッセージが表示されていることを確認する
2. <戻り点: ファイル指定の終了>に遷移する

代替コースG:階層になったディレクトリを指定した場合
1. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
2. <戻り点: ディレクトリ指定の終了>に遷移する

代替コースH:読込権限がないイベントハンドラ定義ファイルを指定した場合
1. アプリケーション開発者はエラーメッセージが表示されていることを確認する
2. <戻り点: ファイル指定の終了>に遷移する

代替コースI:読込権限がないディレクトリを指定した場合
1. アプリケーション開発者はエラーメッセージが表示されていることを確認する
2. <戻り点: ディレクトリ指定の終了>に遷移する

代替コースJ:読込権限が複雑に設定されている階層になったディレクトリを指定した場合
1. アプリケーション開発者はイベントドライバ管理画面でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
2. <戻り点: ディレクトリ指定の終了>に遷移する

注記:
  * Tengineコアの起動の失敗については {アプリケーション開発者が開発環境にインストールする} を参照とする
  * Tengineコンソールの起動の失敗については {アプリケーション開発者が開発環境にインストールする} を参照とする
  * 登場するイベントハンドラ定義のうち、以下については、将来対応の予定
    * uc10_if_the_event_occurs_at_the_server.rb ("at"が将来対応)
    * uc11_if_the_event_occurs_in_the_servers.rb ("in"が将来対応)
    * uc14_if_the_event_occurs_at_same_servers.rb ("at"が将来対応)
    * uc30_complex_case01.rb ("at"が将来対応)
    * uc30_complex_case02.rb ("at"が将来対応)
    * uc31_complex_case01.rb ("at"が将来対応)
    * uc40_generated_handler.rb (テンプレート生成機能が将来対応)
  * イベント発火画面やイベント通知画面はイベント管理画面でまとめた方がよいかもしれないので設計で検討する
