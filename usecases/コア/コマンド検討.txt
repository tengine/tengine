# 起動方法の検討

## 最も簡単にDSLを動かす方法
* 最初にちょっと試すときを想定
* 設定ファイルなし
* DSLファイル一つだけ
{{{
SYNOPSIS
tengined [-k action] [-f path_to_config] [-T path/to/file_or_dir]
         [-H db_host] [-P db_port] [-U db_user] [-S db_pass] [-B db_database]
         [-h mq_conn_host] [-p mq_conn_port] [-u mq_conn_user] [-s mq_conn_pass]
         [-v mq_conn_vhost] [-e mq_exchange_name] [-q mq_queue_name]

  -k --action                  test|load|start|enable|stop|force-stop default: start
  -f --config                  /etc/tengine.yml
  -D --daemon                  ignored with "-k test, -k load, -k enable"
     --prevent-loader          doesn't call event handler loader when start. usually use with --daemon option
     --prevent-enabler         doesn't call event handler enabler when start. usually use with --daemon option
     --prevent-activator       doesn't call kernel activator when start. usually use with --daemon option
     --activation-timeout      period to wait for making activation file. default: 300(sec)
  -T --tengined-dsl            path/to/file_or_dir. ignored with "-k test"
     --tengined-log-dir        path/to/dir. default: ./
     --tengined-pid-dir        path/to/dir. default: ./tmp/tengined_pids
     --tengined-activation-dir path/to/dir. default: ./tmp/tengined_activations
  -H --db-host                 default: localhost
  -P --db-port                 default: 27017
  -U --db-user
  -S --db-pass
  -B --db-database             default: tengine_production
  -h --mq-conn-host            default: localhost
  -p --mq-conn-port            default: 5672
  -v --mq-conn-vhost           default: /
  -u --mq-conn-user            default: guest
  -s --mq-conn-pass            default: guest
  -e --mq-exchange-name        default: tengine_event_exchange
     --mq-exchange-type        default: direct
     --mq-exchange-durable     default: true
  -q --mq-queue-name           default: tengine_event_queue
     --mq-queue-durable        default: true
     --mq-pub-persistent       default: true
     --mq-pub-mandatory        default: false
}}}


* gemをインストールしたらまずテスト
{{{
$ tengined -k test
can't connect to database
}}}
* DBとMQに接続する必要があることを通知
* mongodとrabbitmq-serverを起動したら
{{{
$ tengined -k test
Success!
}}}

* DSLのひな形(hello world的なもの)が生成して(後回し。最初はコピペ)
{{{
$ tengine example > hello_world.rb
}}}
* もう起動できちゃう
{{{
$ tengined -T hello_world.rb
}}}

* デーモンとして起動
{{{
$ tengined -D -T hello_world.rb
}}}

一つのサーバで複数のプロセスを起動する機能は後回し


## 本番環境での使い方
* 設定ファイルを生成できる（後回し。最初はコピペ）
{{{
$ tengine production_config
}}}
* 実際の本番環境を想定
* DSLはcapistranoでデプロイされることを想定
* 設定ファイルは /etc/tengine.yml
{{{
dsl: /home/tengine/capistrano/app/current/dsl
db:
  host: localhost
  port: 27018
  user: user
  pass: pass
  database: tengine_production
mq:
  conn:
    host: localhost
    port: 5672
    user: user
    pass: pass
}}}

 * /etc/init.d/tengined は init.d系の仕組みに則ったもので、前述のtenginedとは別物。
{{{
$ /etc/init.d/tengined start
$ /etc/init.d/tengined stop
$ /etc/init.d/tengined force-stop
}}}
で操作できる
