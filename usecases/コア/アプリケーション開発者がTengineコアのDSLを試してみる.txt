ユースケース名:
  アプリケーション開発者がTengineコアのDSLを試してみる

背景:
  アプリケーション開発者は、Tengineの導入を検討するために、イベントハンドラ定義の開発やTengineの運用の容易性や運用の信頼性を評価する
  また、Tengineの利用を容易にする為には、以下にあげた項目が重要である
    * Tengineのインストールからセットアップ、起動までの作業手順が簡単なこと
    * イベントハンドラ定義を作成する為の資料が揃っており、"イベントハンドラ定義の作成"から"イベントハンドラの実行"までの作業手順が簡単なこと
  なお、Tengineの利用を容易にする背景の一つとして、最首さんによるTengineのプレゼンテーションを現実のユースケースとしても考慮する

概要:
  アプリケーション開発者がTengineコアのイベントハンドラ定義を試しに作成しイベント発火からイベントハンドラの実行までを確認する

事前条件:
  Tengineを動かすためのパッケージとTengineコアとTengineコンソールのインストールおよびセットアップが完了している
  Tengineコンソールのプロセスが起動している
  登場するイベントハンドラ定義の全てのファイルが作成されている

事後条件(最低保証):
  なし

登場するコンポーネント:
  イベントハンドラ定義ストア
  イベントハンドラストア
  イベント発火画面
  イベント通知画面

登場するドキュメント:
  Getting Started
  開発者向けTengineマニュアル

登場するイベントハンドラ定義:
  uc01_execute_processing_for_event.rb
  uc02_fire_another_event.rb
  uc03_2handlers_for_1event.rb
  uc08_if_both_a_and_b_occurs.rb
  uc10_if_the_event_occurs_at_the_server.rb
  uc11_if_the_event_occurs_in_the_servers.rb
  uc30_complex_case01.rb
  uc30_complex_case02.rb
  uc31_complex_case01.rb
  uc40_generated_handler.rb

基本コース:
1. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する (利用するイベントハンドラ定義：uc01_execute_processing_for_event.rb)
2. アプリケーション開発者は「イベントドライバ管理画面」でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
3. アプリケーション開発者は「イベント発火画面」でイベントを発火する
4. アプリケーション開発者は「イベント通知画面」でイベントを発火したことを確認する
5. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
6. アプリケーション開発者は開発環境でTengineコアを停止する

7. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する (利用するイベントハンドラ定義：uc02_fire_another_event.rb)
8. アプリケーション開発者は「イベントドライバ管理画面」でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
9. アプリケーション開発者は「イベント発火画面」でイベントを発火する
10. アプリケーション開発者は「イベント通知画面」でイベントを発火したことを確認する
11. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
12. アプリケーション開発者は開発環境でTengineコアを停止する

13. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する (利用するイベントハンドラ定義：uc03_2handlers_for_1event.rb)
14. アプリケーション開発者は「イベントドライバ管理画面」でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
15. アプリケーション開発者は「イベント発火画面」でイベントを発火する
16. アプリケーション開発者は「イベント通知画面」でイベントを発火したことを確認する
17. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
18. アプリケーション開発者は開発環境でTengineコアを停止する

19. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する (利用するイベントハンドラ定義：uc08_if_both_a_and_b_occurs.rb)
20. アプリケーション開発者は「イベントドライバ管理画面」でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
21. アプリケーション開発者は「イベント発火画面」でイベントを発火する
22. アプリケーション開発者は「イベント通知画面」でイベントを発火したことを確認する
23. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
24. アプリケーション開発者は開発環境でTengineコアを停止する

25. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する (利用するイベントハンドラ定義：uc10_if_the_event_occurs_at_the_server.rb)
26. アプリケーション開発者は「イベントドライバ管理画面」でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
27. アプリケーション開発者は「イベント発火画面」でイベントを発火する
28. アプリケーション開発者は「イベント通知画面」でイベントを発火したことを確認する
29. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
30. アプリケーション開発者は開発環境でTengineコアを停止する

31. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動するイベントハンドラ定義を作成する (利用するイベントハンドラ定義：uc11_if_the_event_occurs_in_the_servers.rb)
32. アプリケーション開発者は「イベントドライバ管理画面」でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
33. アプリケーション開発者は「イベント発火画面」でイベントを発火する
34. アプリケーション開発者は「イベント通知画面」でイベントを発火したことを確認する
35. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
36. アプリケーション開発者は開発環境でTengineコアを停止する
37. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する (利用するイベントハンドラ定義：uc30_complex_case01.rb)
38. アプリケーション開発者は「イベントドライバ管理画面」でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
39. アプリケーション開発者は「イベント発火画面」でイベントを発火する
40. アプリケーション開発者は「イベント通知画面」でイベントを発火したことを確認する
41. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
42. アプリケーション開発者は開発環境でTengineコアを停止する

43. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する (利用するイベントハンドラ定義：uc30_complex_case02.rb)
44. アプリケーション開発者は「イベントドライバ管理画面」でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
45. アプリケーション開発者は「イベント発火画面」でイベントを発火する
46. アプリケーション開発者は「イベント通知画面」でイベントを発火したことを確認する
47. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
48. アプリケーション開発者は開発環境でTengineコアを停止する

49. アプリケーション開発者は開発環境でTengineコアをイベントハンドラ定義を指定してファアグラウンドで起動する(利用するイベントハンドラ定義：uc31_complex_case01.rb)
50. アプリケーション開発者は「イベントドライバ管理画面」でイベントハンドラ定義がイベントハンドラストアへ登録されたことを確認する
51. アプリケーション開発者は「イベント発火画面」でイベントを発火する
52. アプリケーション開発者は「イベント通知画面」でイベントを発火したことを確認する
53. アプリケーション開発者はTengineコアを起動しているコンソール上でイベントハンドラが実行されたことを確認する
54. アプリケーション開発者は開発環境でTengineコアを停止する
55. アプリケーション開発者は開発環境でTengineコンソールを停止する


注記:
  * Tengineコアの起動の失敗については {アプリケーション開発者が開発環境にインストールする} を参照とする
  * Tengineコンソールの起動の失敗については {アプリケーション開発者が開発環境にインストールする} を参照とする
  * 登場するイベントハンドラ定義のうち「uc40_generated_handler.rb」については「イベントハンドラ定義とそのテストコードをテンプレートから生成する機能」にて将来対応予定
  * 「イベント発火画面」や「イベント通知画面」は「イベント管理画面」でまとめた方がよいかもしれないので設計で検討する
