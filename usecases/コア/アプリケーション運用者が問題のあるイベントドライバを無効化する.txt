ユースケース名:
  アプリケーション運用者が問題のあるイベントドライバを無効化する

背景:
  アプリケーション開発者が作成したイベントハンドラ定義にはバグが混入することもある。
  あるいはバグでなくても外部要因との接続などの問題でイベントハンドラを起動するべきでない状況も考えられる。
  アプリケーション運用者は問題のあるイベントドライバを特定できる場合にはそれを停止する必要がある。

  ただしアプリケーション運用者はどのイベントドライバがどのような振る舞いをするのかを詳しくは知らないので、
  何らかの通知を受けない限り問題に気づく事はできない。

概要:
  「エラーイベント通知画面」は問題発生時にアプリケーション運用者に問題を通知する。
  アプリケーション運用者は通知された問題のあるイベントドライバを検索して無効化する。
  
事前条件:
  対象のイベントドライバが有効になっている。
  アプリケーション運用者は常に「エラーイベント通知画面」を開いている。

事後条件:
  対象のイベントドライバが無効になっている。

登場するコンポーネント:
  エラーイベント通知画面
  イベントドライバ管理画面

基本コース:
1. 「エラーイベント通知画面」は問題発生時にアプリケーション運用者に問題を通知する。
2. アプリケーション運用者は「イベントドライバ管理画面」で通知された問題のイベントの発生源であるイベントドライバを表示させる。
3. 「イベントドライバ管理画面」は対象のイベントドライバが有効になっていることを出力する [代替コースA, 代替コースB]
4. アプリケーション運用者が「イベントドライバ管理画面」で対象のイベントドライバを無効化する
5. 「イベントドライバ管理画面」は対象のイベントドライバが無効になったことを出力する [代替コースA, 代替コースB, 代替コースC]

代替コースA: 「イベントドライバ管理画面」は対象のイベントハンドラが見つからないことを出力する
1. 「イベントドライバ管理画面」が対象のイベントドライバが見つからないことを出力する
2. アプリケーション運用者は「イベントドライバ管理画面」で対象となるイベントドライバを検索する...(この後どうする？)

代替コースB: 対象のイベントハンドラが既に無効になっていることを出力する
1. 「イベントドライバ管理画面」は対象のイベントハンドラが既に無効になっていることを出力する

代替コースC: 対象のイベントハンドラの更新処理に失敗したことを出力する
1. 「イベントドライバ管理画面」は対象のイベントハンドラの更新処理に失敗したことを出力する
2. アプリケーション運用者は原因の調査と復旧を行う
3. 基本コースの1に戻る


注記:
実行中のイベントハンドラを停止する事はここでは対象としない。
プロセスの停止を行う事で実行中のイベントハンドラも停止されるが、(通常の)安全な停止の場合は、
イベントハンドラの実行が終わる事を待つ。
もし、イベントハンドラの実行を安全に停止できるようにするためには、イベントハンドラ定義に
そのような処理を実装する必要がある。


2011/08/19 秋間
画面でイベントドライバが無効になったことを確認できれば良いのか？
運用を考えると実際にイベントを送信して、イベントハンドラが動かないところまでを確認するのが妥当ではないか？
ただし、イベントハンドラが万が一でも動いてしまっては問題になるので、「イベントハンドラの実行を行わないフラグ」
が付いた特殊なイベントを送信して「対象のイベントハンドラが動くところだった」ということをどうにか確認できると
良いかもしれない。
