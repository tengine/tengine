ユースケース名:
  アプリケーション開発者がTengineコアが運用に耐えられるか検証する

背景:
  Tengineを実運用できるか検証するために、アプリケーション開発者がTengineの開発環境でジョブの実行を試してみる。
  運用の容易さの評価項目
    * インストールからセットアップ、起動までの作業手順が容易であること(未記載)
    * アプリケーションやTengineが利用するプロセスに問題が発生した際の原因の調査方法が容易であること(記載途中)
  ジョブ実行の評価項目
    * 循環参照や存在しない参照など、実行不可能なジョブネット定義の検出が可能であること

概要:
  Tengineの開発環境は構築済みである。
  アプリケーション運用者が確認をする項目は以下を想定している。
  * ジョブ実行中にコアやキュー、ネットワーク、ジョブプロセスウォッチドッグ自身やジョブプロセスウォッチドッグが稼働サーバがダウンする

  ジョブ実行中にジョブ実行サーバがダウンした場合の仕様は、当面実現できるか不明です。

事前条件:
  DBプロセスが起動している
  キューのプロセスが起動している
  Tengineコアが２プロセス起動している
  Tengineコンソールが起動している

成功時保証:
  アプリケーション開発者がTengineのジョブ実行で問題が発生したことを確認できる
  アプリケーション開発者がTengineのジョブ実行が正常終了したことを確認できる

最低保証:
  なし

登場するコンポーネント:
  イベント管理
  ジョブ管理

登場するパッケージ:
  Tengineコア
  Tengineコンソール
  Tengineジョブエージェント
  
参照するドキュメント:
  Getting Started
  アプリケーション開発者向けTengineマニュアル
  アプリケーション運用者向けTengineマニュアル

基本コース:
  アプリケーション開発者は仮想サーバを起動する
  アプリケーション開発者はジョブテスト起動する
  アプリケーション開発者はジョブテストが正常に終了したことを確認する

  #ジョブを実行中にtenginedが落ち、フェールバックする
  アプリケーション開発者は「テンプレートジョブ一覧」画面から仮想サーバはジョブを実行する
  アプリケーション開発者は、スクリプトの実行中に片方のtenginedプロセスをkillし、tenginedを強制的に停止する
  アプリケーション開発者は ジョブが終了する時間分待つ
  アプリケーション開発者は「実行ジョブ一覧」画面を確認し、ジョブが正常終了していることを確認する
  アプリケーション開発者は強制停止した片系のTengineコアプロセスを再度起動する
