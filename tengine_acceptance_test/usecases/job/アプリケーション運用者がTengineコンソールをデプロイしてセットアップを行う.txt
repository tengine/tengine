ユースケース名:
  アプリケーション運用者がTengineコンソールをデプロイしてセットアップを行う

背景:
  アプリケーション運用者がTengineコンソールをデプロイする場合、デプロイする手順や手順が多いことが考えられる。
  その場合でも、アプリケーション運用者はデプロイを安全に行う必要がある。そのためcapistranoを利用して
  処理のほとんどを自動で行い、安全にデプロイを行う。


概要:
  アプリケーション運用者は、既にTengineコンソールが動作している環境や、Tengineコンソールがインストールされていない環境に対して
  Tengineコンソールのデプロイを行う。デプロイを行う際にデプロイ環境やデプロイする内容に問題があった場合でも、問題の影響範囲を少なく、
  また、復旧を行える必要がある。このユースケースでは、デプロイを行う環境毎のデプロイの操作と、問題があった場合の操作を記述する。


事前条件:
  rubyのバージョンが1.9.2@290
  rubygemsのバージョンが1.8.10
  bundlerがインストールされていること
  Tengineを稼働させるサーバが起動している
  Tengineコンソールを動作させるユーザアカウントが作成されている
  デプロイ先でtengineを動作させるユーザの認証情報を取得していること

成功時保証:
  Tengineコンソールのデプロイが完了する

最低保証:
  なし

登場する画面:
  イベント通知
  イベントドライバ一覧
  テンプレートジョブ一覧

登場するコンポーネント:
  なし

登場するパッケージ:
  tengine_console

登場するドキュメント:
 運用者向けTengineマニュアル 

基本コース: デプロイ先からも、デプロイするクライアントからもインターネットにアクセスできない
. アプリケーション運用者はデプロイ先のサーバにデプロイを行うディレクトリを作成する
. アプリケーション運用者はデプロイするクライアントにsudo gem install capistranoコマンドでcapistranoをインストールする 
. アプリケーション運用者はデプロイするクライアントにsudo gem install capistranoコマンドでtermiosをインストールする
. アプリケーション運用者はインターネットにつながる他のクライアントでgithubからtengine_consoleを取得したものをファイルサーバやメール経由で取得する [代替コース]  <戻り点: tengine_consoleの取得>
. アプリケーション運用者はtengine_consoleのconfigディレクトリ以下の設定ファイルをデプロイする環境にあわせて設定する
. アプリケーション運用者はcapifyコマンドでdeploy.rbを作成する
. アプリケーション運用者はdeploy.rbを編集し、ローカルのディレクトリからデプロイするように設定する
. アプリケーション運用者はdeploy.rbを編集し、デプロイするユーザ、認証情報、デプロイするディレクトリを設定する
. アプリケーション運用者はdeploy.rbを編集し、deploy後にbundle installを行うよう設定する
. アプリケーション運用者はcap deploy:setupしデプロイ環境のセットアップを行う [代替コースB] ＜戻り点:deploy:setupの完了>
. アプリケーション運用者はcap deployを行いアプリケーションとgemファイル、設定ファイルをデプロイする [代替コースC] ＜戻り点:deployの完了>
. アプリケーション運用者は「イベント通知」画面を開き、今まで処理していたイベントが表示されていることを確認する
. アプリケーション運用者は「テンプレートジョブ一覧」画面を開き、デプロイする前に登録されていたジョブがあることを確認する [代替コースD] ＜戻り点:deployの確認完了>
ユースケースを終了する

代替コースA: デプロイするクライアントからインターネットにつながる
. アプリケーション運用者はデプロイするtengine_consoleをgithubから取得する [代替コース]
. アプリケーション運用者は取得したtengine_consoleのディレクトリでbundle packageを行い必要なgemを取得する

代替コースB: cap deploy:setupに失敗する
. アプリケーション運用者は標準出力から失敗した原因を見つける原因を取り除く [代替コースB1] ＜戻り点:deploy:setupの問題解決＞
. アプリケーション運用者はcap deploy:setupしデプロイ環境のセットアップを行う [代替コース B]
＜戻り点:deploy:setupの完了＞に遷移する

代替コースB1: デプロイ先のサーバが起動していなものがある
. アプリケーション運用者はサーバを起動する
＜戻り点:deploy:setupの問題解決＞に遷移する

代替コースB2: デプロイ先のサーバにログインするユーザが間違っている
. アプリケーション運用者はdeploy.rbを修正する
＜戻り点:deploy:setupの問題解決＞に遷移する

代替コースB2: デプロイ先のサーバとの接続が切れた
＜戻り点:deploy:setupの問題解決＞に遷移する

代替コースB2: デプロイ先のサーバにログインするための認証情報が間違っている
. アプリケーション運用者はdeploy.rbを修正する
＜戻り点:deploy:setupの問題解決＞に遷移する

代替コースC: cap deployに失敗する
. アプリケーション運用者は標準出力からデプロイが失敗した原因とデプロイの状況を確認する 
. アプリケーション運用者は標準出力から失敗した原因を見つける
. アプリケーション運用者は原因を取り除いてデプロイを行う [代替コースC1_1,代替コースC1_2,代替コースC1_3] <戻り点:失敗したデプロイの対応完了>
＜戻り点:deployの完了＞に遷移する

代替コースC1_1: 初回デプロイ時
＜戻り点:ロールバック確認完了＞に遷移する

代替コースC1_2: デプロイする内容に問題がありロールバックをする必要がある場合
. アプリケーション運用者はcap deploy:rollbackコマンドでロールバックを行う [代替コース]
. アプリケーション運用者はロールバックされていることを確認する
＜戻り点:失敗したデプロイの対応完了＞に遷移する

代替コースC1_2_1: ロールバックに失敗した
. アプリケーション運用者は標準出力からロールバックが失敗した原因と状況を確認する []
. アプリケーション運用者はcap deploy:rollbackコマンドでロールバックを行う [代替コースC1_2_1]
＜戻り点:失敗したデプロイの対応完了＞に遷移する

代替コースC1_3: デプロイ環境に問題がある
. アプリケーション運用者は環境を修正する
. アプリケーション運用者は再度デプロイを行うためにcap deployコマンドでデプロイを行う [代替コースC1_3_1]
＜戻り点:失敗したデプロイの対応完了＞に遷移する

代替コースC1_3_1: tengine_consoleを起動するだけで良い場合
. アプリケーション運用者はcap deploy:startコマンドで起動していないtengine_consoleを起動する。既に起動しているtengine_consoleはそのまま起動しておく。
＜戻り点:失敗したデプロイの対応完了＞に遷移する

代替コースD: イベントハンドラをデプロイした場合
. アプリケーション運用者は「イベントドライバ一覧」画面を開き、デプロイする前に登録されていたイベントドライバがあることを確認する
＜戻り点:デプロイの確認完了＞に遷移する

