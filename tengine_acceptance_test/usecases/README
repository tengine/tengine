= ユースケースの書式 =
* 以下のファイルをテキスト化したものです
 * https://docs.google.com/a/nautilus-technologies.com/document/d/1e3Y8HR--LvgVYEMwpyGAuam2lVaVxU_nvb-yj-0u0i8/edit?hl=en_US

* ユースケースの書式は以下のサイトで紹介している正式書式を用いて記述する
 * 「アジャイルモデリング(AM)公式サイト -システムユースケースの概要」
  * URL: http://www.ogis-ri.co.jp/otc/swec/process/am-res/am/artifacts/systemUseCase.html

 * 「ユースケース - Wikipedia」
  * URL: http://ja.wikipedia.org/wiki/ユースケース

 * 「ユースケースの適用：実践ガイド」
  * URL: http://www.amazon.co.jp/dp/4894711869

 * 書式
 | ユースケース名(必須):
 |  <主語>が<目的語>を<述語>
 | 
 | 背景(必須):
 |  ユースケースを書くための背景を記述する節。
 | 
 | 概要:
 |   ユースケースの本体が完成する以前にその概要を記述する節である。
 |   これによって読者が簡単に概要を知ることができる。
 |   基本的には数個の文で記述され、ゴールと主なアクターに関する説明を含む。
 | 
 | 事前条件(必須):
 |   そのユースケースを開始する時点で真である条件を記述する節である。
 |   ただし、ユースケースを開始させるトリガーとは異なることに注意されたい。
 |   一部でも事前条件が真でない場合、そのユースケースを実行したときにどうなるかは不確定である。
 | 
 | 成功時保証(必須):
 |   シナリオが正常系で終了した時点で満たされているべき条件である。
 | 
 | 最低保証:
 |   シナリオが正常系、異常系にかかわらず、終了した時点で満たされているべき条件である。
 | 
 | 基本コース:
 |   事前条件から事後条件に進むためのステップ
 |   各ステップは連番で記述する
 |   誰が何をどうするのかを記述する
 |   代替コースに派生がある場合はステップの末尾に記述する
 |   
 |   >> コース内での記述ルール
 |     ユースケース名...{ユースケース名}
 |     代替コース...[代替コースA, 代替コースB...]
 |     戻り点...任意のコースから別コースに戻る場合に、戻る地点を明示するためのマーカー
 |             戻り点を配置する際にはステップ内に<戻り点:foo>と記述し、
 |             戻り点に遷移する場合はステップに『<戻り点:foo>に遷移する』と記述する
 | 
 |     拡張点...拡張したユースケースの開始点を明示するためのマーカー
 |             拡張点を配する場合にはステップ内に<拡張点:bar>と記述し、
 |             『拡張するユースケースを書く際には{ユースケース名}の<拡張点:bar>として以下を行う』と記述する
 | 
 |   includeは以下のように『{includeするユースケース名}に遷移する』と記述する
 |     1. アプリケーション運営者が問題を検知して確認する
 |     2.「アプリケーション運用者が本番環境を変更する」に遷移する
 |     3. アプリケーション運営者が実施後の報告を行う
 | 
 | 代替コースA(B,C,...):
 |   アクションの基本コースで正常・異常に関わらず異常が発生した場合の分岐ステップ(末尾のアルファベットは連続する)
 |   代替コースのステップは1,2...のように連番で記述する
 | 
 | 注記:
 |   経験上、どんなテンプレートを使っても、どこにも当てはまらない重要な情報がある。そのため、どのテンプレートにもそのような情報を記述する節が存在する。
 | 
 | 参照するドキュメント:
 |   ユースケース中で参照するドキュメント類があれば記述する項
 | 
 | 関連するユースケース:
 |   ユースケース中で別のユースケースをincludeしたり、拡張先のユースケースが明らかな場合に、記述する項
 | 
 | 関連するコンポーネント:
 |   ユースケース中で関連するコンポーネントがあれば記述する項


== 記述例_1(基本的な記述) ==

  ユースケース名:
  〇〇管理者が〇〇を起動する

  概要:
  インストール済みの〇〇の起動を行う。 

  背景:
  〇〇管理者が〇〇をする必要があり、その際の事前準備として〇〇管理者が〇〇を起動する。

  事前条件: 
  〇〇のインストールが完了している。

  成功時保証: 
  〇〇のプロセスが起動する。

  最低保証:
  なし

  関連するコンポーネント:
  データストア、キューサーバ

  基本コース:
  1. 〇〇管理者は〇〇起動コマンドを実行する<戻り点:起動コマンド実行>
  2. 〇〇起動コマンドは〇〇プロセスを起動する
  3. 〇〇プロセスは設定ファイルの読み込みを行う[代替コースA]
  4. 〇〇プロセスは設定ファイルに記載されているキューに接続を行う[代替コースB]
  5. 〇〇プロセスは設定ファイルに記載されているデータストアに接続を行う[代替コースC]
  6. 〇〇管理者は〇〇プロセスが起動している事を確認する

  代替コースA: 〇〇の設定ファイルがない
  1. 〇〇プロセスは設定ファイルの読み込みに失敗する
  2. 〇〇起動コマンドは〇〇プロセスの起動を停止する
  3. 〇〇管理者は〇〇の設定ファイルを作成する
  4. <戻り点:起動コマンド実行>に遷移する

  代替コースB: 〇〇が接続するキューが存在しない
  1. 〇〇起動プロセスはキューの接続に失敗する
  2. 〇〇起動コマンドは〇〇プロセスの起動を停止する
  3. 〇〇管理者はキューの起動を行う
  4. <戻り点:起動コマンド実行>に遷移する

  代替コースC: 〇〇が接続するデータストアが存在しない
  1. 〇〇起動プロセスはデータストアの接続に失敗する
  2. 〇〇起動コマンドは〇〇プロセスの起動を停止する
  3. 〇〇管理者はデータストアの起動を行う
  4. <戻り点:起動コマンド実行>に遷移する


== 記述例_2(includeや拡張点を使用した記述) ==

  ユースケース_2_1

  ユースケース名:
  〇〇管理者が〇〇を実行する

  背景:
  〇〇管理者が〇〇する必要があり、その際に〇〇を起動する。

  概要:
  インストール済みの〇〇の起動を行う。 

  事前条件: 
  〇〇のインストールが完了している。

  成功時保証: 
  〇〇のが実行されている。

  最低保証:
  なし

  関連するユースケース:
  {〇〇管理者がコマンドを使用して〇〇を実行する}、{〇〇管理者が〇〇画面を使用して〇〇を実行する}

  基本コース:
  1. 「〇〇管理者が〇〇を起動する」に遷移する
  2. <拡張点:〇〇管理者は◯◯を実行する>
  3. ◯◯管理者は〇〇が実行されたことを確認する

  ユースケース_2_2

  ユースケース名:
  〇〇管理者がコマンドを使用して〇〇を実行する

  背景:
  〇〇管理者が〇〇することが、ある場合があり、その際に〇〇を起動する。

  事前条件: 
  〇〇コマンドを実行する環境がインストール済みである。

  成功時保証: 
  〇〇のが実行されている。

  最低保証:
  なし

  基本コース:
  {〇〇管理者が〇〇を実行する}の<拡張点:〇〇管理者は◯◯を実行する>として以下を行う
  1.〇〇管理者が〇〇コマンド`command`を実行する
  2. 〇〇コマンドは〇〇を実行する

  ユースケース_2_3

  ユースケース名:
  〇〇管理者が〇〇画面を使用して〇〇を実行する

  背景:
  〇〇管理者が〇〇することが、ある場合があり、その際に〇〇を起動する。

  事前条件: 
  〇〇画面を操作する環境がインストール済みである。

  成功時保証: 
  〇〇のが実行されている。

  最低保証:
  なし

  基本コース:
  {〇〇管理者が〇〇を実行する}の<拡張点:〇〇管理者は◯◯を実行する>として以下を行う
  1.〇〇管理者は〇〇画面を表示する
  2. 〇〇管理者は〇〇を実行するため〇〇ボタンを押下する
  3. 〇〇画面は〇〇を実行する
